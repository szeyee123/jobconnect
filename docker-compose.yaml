version: "3.9"
services:
  candidate:
    build:
      context: ./candidate
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./candidate/src:/opt/app/src
    entrypoint: ["python3", "-u", "main.py"]
    depends_on:
      - db-admin
    environment:
      MONGO_URI: mongodb://root:root@db:27017
      ENV: dev
  company:
    build:
      context: ./company
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    volumes:
      - ./company/src:/opt/app/src
    entrypoint: ["python3", "-u", "main.py"]
    environment:
      MONGO_URI: mongodb://root:root@db:27017
      ENV: dev
  job:
    build:
      context: ./job
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    volumes:
      - ./job/src:/opt/app/src
    entrypoint: ["python3", "-u", "main.py"]
    environment:
      MONGO_URI: mongodb://root:root@db:27017
      ENV: dev
  db:
    image: mongo
    restart: no
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongodb/data/db:/data/db
  db-admin:
    image: mongo-express
    restart: no 
    ports:
      - 5000:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@db:27017
    logging:
      driver: none
    depends_on:
     - db
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://kafka:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
  #   volumes:
  #     - ./kafka-data:/var/lib/kafka/data
  # kafka-setup:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - kafka
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "echo 'Waiting for Kafka to be ready...'
  #     while ! nc -z kafka 9092; do
  #       sleep 0.1
  #     done
  #     echo 'Kafka is ready, creating topics...'
  #     kafka-topics --create --topic topic1 --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
  #     kafka-topics --create --topic topic2 --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
  #     echo 'Topics created.'
  #     "